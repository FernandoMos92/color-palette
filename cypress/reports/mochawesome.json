{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-09-12T04:22:05.119Z",
    "end": "2021-09-12T04:23:40.708Z",
    "duration": 95589,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "94f2c968-137b-4437-b957-22eda2dda923",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4a64c210-76a2-485d-9a64-231fbdaa96f6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "ee3b10e8-86ce-4384-9ef8-f7f862f82e35",
              "parentUUID": "4a64c210-76a2-485d-9a64-231fbdaa96f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee3b10e8-86ce-4384-9ef8-f7f862f82e35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 483,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "be23b9cc-2300-432d-98ec-5f37364cd5fe",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "d50efb73-22ba-464d-8fda-cc77eeb3f8e4",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "a562b17b-9384-4990-bb57-d22b40cd0535",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "28d09641-e0eb-4e24-95ed-b59deeb23b5f",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "855fbe29-0ff3-4a45-89c4-90769f67b5a6",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "fe37b797-ad1a-44d8-b9a1-236b841700da",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "deeea2de-ff04-40ba-b47d-8e6fb684c8e7",
              "parentUUID": "ea5b8f70-8846-4a92-a1d7-d2b53650f0d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be23b9cc-2300-432d-98ec-5f37364cd5fe",
            "d50efb73-22ba-464d-8fda-cc77eeb3f8e4",
            "a562b17b-9384-4990-bb57-d22b40cd0535",
            "28d09641-e0eb-4e24-95ed-b59deeb23b5f",
            "855fbe29-0ff3-4a45-89c4-90769f67b5a6",
            "fe37b797-ad1a-44d8-b9a1-236b841700da",
            "deeea2de-ff04-40ba-b47d-8e6fb684c8e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1859,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef11bfba-28bc-45d0-a4cb-c26f3d58e5de",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "22d58f53-c0c4-4203-8873-7db5352a3885",
              "parentUUID": "ef11bfba-28bc-45d0-a4cb-c26f3d58e5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "020dbf85-842a-420a-8ad7-772952cd08a8",
              "parentUUID": "ef11bfba-28bc-45d0-a4cb-c26f3d58e5de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22d58f53-c0c4-4203-8873-7db5352a3885",
            "020dbf85-842a-420a-8ad7-772952cd08a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 706,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dea5d05c-9c6b-4a05-85a3-0583015f0a03",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "feb271ba-4678-400e-b995-17266a36106a",
              "parentUUID": "dea5d05c-9c6b-4a05-85a3-0583015f0a03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "59477575-d2cb-479b-b793-9b4b396383f2",
              "parentUUID": "dea5d05c-9c6b-4a05-85a3-0583015f0a03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "73b7b3cd-093b-4eff-966d-4042d745adb9",
              "parentUUID": "dea5d05c-9c6b-4a05-85a3-0583015f0a03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c195bee7-b1b3-4228-9507-72e6e0230aa1",
              "parentUUID": "dea5d05c-9c6b-4a05-85a3-0583015f0a03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "feb271ba-4678-400e-b995-17266a36106a",
            "59477575-d2cb-479b-b793-9b4b396383f2",
            "73b7b3cd-093b-4eff-966d-4042d745adb9",
            "c195bee7-b1b3-4228-9507-72e6e0230aa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "693a4e6f-d0c7-41b2-9156-57307517b612",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "ec8d2bf5-254d-4c5d-8ff9-b18ce3ddcaa2",
              "parentUUID": "693a4e6f-d0c7-41b2-9156-57307517b612",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 627,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "3448092e-832d-44d3-89eb-09aed7ab7734",
              "parentUUID": "693a4e6f-d0c7-41b2-9156-57307517b612",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec8d2bf5-254d-4c5d-8ff9-b18ce3ddcaa2",
            "3448092e-832d-44d3-89eb-09aed7ab7734"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05a74a39-c037-4ad5-8931-17d06c3a9e43",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "8e62e454-2350-4995-98d3-dccd361c4091",
              "parentUUID": "05a74a39-c037-4ad5-8931-17d06c3a9e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "f1c70602-ab7f-4d42-aeb5-d39a51a67ed1",
              "parentUUID": "05a74a39-c037-4ad5-8931-17d06c3a9e43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e62e454-2350-4995-98d3-dccd361c4091",
            "f1c70602-ab7f-4d42-aeb5-d39a51a67ed1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 333,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6e14c650-1566-46c2-93f2-a151aca90d40",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ca4cd715-be89-4cda-86df-d3cc4eed2f6d",
              "parentUUID": "6e14c650-1566-46c2-93f2-a151aca90d40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e6ebd20e-bfe2-485b-a44e-d93631dea51a",
              "parentUUID": "6e14c650-1566-46c2-93f2-a151aca90d40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca4cd715-be89-4cda-86df-d3cc4eed2f6d",
            "e6ebd20e-bfe2-485b-a44e-d93631dea51a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e85ab997-786d-43ac-9e68-0774f203574b",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "f131d70c-4878-4a60-8f00-208a0a0c8336",
              "parentUUID": "e85ab997-786d-43ac-9e68-0774f203574b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "280e1a86-23d8-41ad-94f6-e03b51afea54",
              "parentUUID": "e85ab997-786d-43ac-9e68-0774f203574b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3618,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "4a23f32e-98e0-41d6-80df-569701a0641a",
              "parentUUID": "e85ab997-786d-43ac-9e68-0774f203574b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f131d70c-4878-4a60-8f00-208a0a0c8336",
            "280e1a86-23d8-41ad-94f6-e03b51afea54",
            "4a23f32e-98e0-41d6-80df-569701a0641a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15997,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97ccf8b8-92bd-4d5c-af13-59aefe63b3b1",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "cb38ee48-93b2-472c-b0ef-8724ec59ab2c",
              "parentUUID": "97ccf8b8-92bd-4d5c-af13-59aefe63b3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "706e9693-25a6-4018-ad43-bd02facd527d",
              "parentUUID": "97ccf8b8-92bd-4d5c-af13-59aefe63b3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "2acfaa28-7e38-4c52-9105-6f0e160cc35b",
              "parentUUID": "97ccf8b8-92bd-4d5c-af13-59aefe63b3b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2957,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "60d3d94b-cbae-40ed-b7bc-e186b295a7a3",
              "parentUUID": "97ccf8b8-92bd-4d5c-af13-59aefe63b3b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb38ee48-93b2-472c-b0ef-8724ec59ab2c",
            "706e9693-25a6-4018-ad43-bd02facd527d",
            "2acfaa28-7e38-4c52-9105-6f0e160cc35b",
            "60d3d94b-cbae-40ed-b7bc-e186b295a7a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4706,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c1a7f62d-7c0b-4876-8bf1-b83ba4fcf5b6",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4663,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3c7017bd-f325-4d81-8d01-fa624863c843",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4899,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a484afe9-f1b9-4a50-889e-5a31241f8e36",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4743,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33b18885-01ff-4f7e-a371-16b7ee2894ae",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4669,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8d17d1ab-e608-4dcc-bbf2-d5a1e115afbe",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4602,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2807e6c4-01b8-42b8-830d-943fd608deae",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4863,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1a0ee50e-7441-4444-9701-2722a8ea37ac",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4855,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7364df4-f34b-4acb-8ba2-9d96178773ca",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2e8bd4ef-51e8-4e7e-9559-b4755b8a347b",
              "parentUUID": "a910e7f4-bf18-4d6a-ac8f-3ca834b73556",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c1a7f62d-7c0b-4876-8bf1-b83ba4fcf5b6",
            "3c7017bd-f325-4d81-8d01-fa624863c843",
            "a484afe9-f1b9-4a50-889e-5a31241f8e36",
            "33b18885-01ff-4f7e-a371-16b7ee2894ae",
            "8d17d1ab-e608-4dcc-bbf2-d5a1e115afbe",
            "2807e6c4-01b8-42b8-830d-943fd608deae",
            "1a0ee50e-7441-4444-9701-2722a8ea37ac",
            "c7364df4-f34b-4acb-8ba2-9d96178773ca",
            "2e8bd4ef-51e8-4e7e-9559-b4755b8a347b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "337bd5c9-69cd-4fab-b478-eba824e6ad35",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4589,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "773b8213-97a2-4749-b4e1-ff28db959d84",
              "parentUUID": "337bd5c9-69cd-4fab-b478-eba824e6ad35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4615,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "79977227-f190-4502-a5d9-ce8e3208db7d",
              "parentUUID": "337bd5c9-69cd-4fab-b478-eba824e6ad35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4673,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42575/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42575/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42575/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42575/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42575/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42575/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42575/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42575/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42575/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42575/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42575/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5e405af5-7f0d-4b82-846f-8c86da99689c",
              "parentUUID": "337bd5c9-69cd-4fab-b478-eba824e6ad35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "773b8213-97a2-4749-b4e1-ff28db959d84",
            "79977227-f190-4502-a5d9-ce8e3208db7d",
            "5e405af5-7f0d-4b82-846f-8c86da99689c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d598082e-2627-42bc-85b2-a6d84c9a5bbc",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "2a0093a5-7297-4b3f-b0a6-40b109455d28",
              "parentUUID": "d598082e-2627-42bc-85b2-a6d84c9a5bbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "d273b15e-7acf-4e06-8019-a9eb38bc0735",
              "parentUUID": "d598082e-2627-42bc-85b2-a6d84c9a5bbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a0093a5-7297-4b3f-b0a6-40b109455d28",
            "d273b15e-7acf-4e06-8019-a9eb38bc0735"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}